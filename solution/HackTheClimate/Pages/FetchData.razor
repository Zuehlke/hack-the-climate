@page "/fetchdata"
@using HackTheClimate.Data
@using BlazorPagination
@using System.Text.RegularExpressions
@inject LawOrPolicyService LawOrPolicyService

<h1>Laws and policies</h1>

@if (_data == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <ul class="laws-and-policies">
        @foreach (var lawOrPolicy in _data.Results)
        {
            <li>
                <h2 class="title"><a href="/lawOrPolicy/@lawOrPolicy.Id">@lawOrPolicy.Title</a></h2>
                <div class="meta">@lawOrPolicy.Geography / @lawOrPolicy.Type </div>
                <div class="description">@lawOrPolicy.ShortenedDescription</div>
            </li>
        }
    </ul>

    <BlazorPager CurrentPage="@_data.CurrentPage"
                 PageCount="@_data.PageCount"
                 OnPageChanged="async e => { LoadPageData(e); }"
                 ShowFirstLast="false"
                 ShowPageNumbers="true"
                 VisiblePages="10"
                 FirstText="First"
                 LastText="Last"/>
}

@code {
    private IEnumerable<LawOrPolicy> _lawsAndPolicies;
    private PagedResult<LawOrPolicy> _data;

    protected override async Task OnInitializedAsync()
    {
        _lawsAndPolicies = LawOrPolicyService.GetLawsAndPolicies();
        LoadPageData(1);
    }

    protected void LoadPageData(int currentPage)
    {
        const int pageSize = 10;
        _data = new PagedResult<LawOrPolicy>
        {
            CurrentPage = currentPage,
            PageCount = _lawsAndPolicies.Count() / pageSize,
            PageSize = pageSize,
            RowCount = _lawsAndPolicies.Count(),
            Results = _lawsAndPolicies.Skip((currentPage-1) * pageSize).Take(pageSize).ToArray()
        };
        StateHasChanged();
    }

}