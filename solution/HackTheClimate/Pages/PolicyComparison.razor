@page "/compare/{id1}/{id2}"
@using HackTheClimate.Data
@using HackTheClimate.Services
@inject LegislationService LegislationService
@inject SimilarityService SimilarityService

@if (_document1 == null || _document2 == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
<div class="container-fluid comparison-container">
    <div class="row">
        <div class="col-sm">
            <h3>@_document1.Title</h3>
            <img src="@($"/flags/{_document1.GeographyIso.ToUpperInvariant()}.svg")" alt="@_document1.GeographyIso"/>
            &nbsp;
            @_document1.Geography
            <img src="@($"{_document1.Type.ToString().ToLowerInvariant()}.svg")" alt="@_document1.Type"/>@_document1.Type
            <p>
                @_document1.ShortenedDescription
                <a href="/legislation/@_document1.Id">more</a>
            </p>
        </div>
        <div class="col-sm">
            <span id="comparison-title-scores">Scores</span>
            <span id="comparison-title-score">@((int) (_similarity.SimilarityScore * 100))</span>
            <span id="comparison-title-out-of">out of 100</span>
        </div>
        <div class="col-sm">
            <h3>@_document2.Title</h3>
            <img src="@($"/flags/{_document2.GeographyIso.ToUpperInvariant()}.svg")" alt="@_document2.GeographyIso" />
            &nbsp;
            @_document2.Geography
            <img src="@($"{_document2.Type.ToString().ToLowerInvariant()}.svg")" alt="@_document2.Type" />@_document2.Type
            <p>
                @_document2.ShortenedDescription
                <a href="/legislation/@_document2.Id">more</a>
            </p>
        </div>
    </div>

    <!-- Default Weight 4-->
    <ListSimilarityResultComponent Title="Product Entities" Similarity="@_similarity.ProductEntitiesSimilarity" Badge="AI" />

    <!-- Default Weight 3-->
    <ListSimilarityResultComponent Title="Keywords" Similarity="@_similarity.KeywordSimilarity" Badge="Metadata" />
    <ListSimilarityResultComponent Title="Sectors" Similarity="@_similarity.SectorsSimilarity" Badge="Metadata" />
    <ListSimilarityResultComponent Title="Skill Entities" Similarity="@_similarity.SkillEntitiesSimilarity" Badge="AI" />
    <ListSimilarityResultComponent Title="Event Entities" Similarity="@_similarity.EventEntitiesSimilarity" Badge="AI" />
    <ListSimilarityResultComponent Title="Frameworks" Similarity="@_similarity.FrameworksSimilarity.ToStringResult()" Badge="Metadata" />
    <ListSimilarityResultComponent Title="Instruments" Similarity="@_similarity.InstrumentsSimilarity" Badge="Metadata" />
    <ListSimilarityResultComponent Title="Natural Hazards" Similarity="@_similarity.NaturalHazardsSimilarity" Badge="Metadata" />
    <ListSimilarityResultComponent Title="Responses" Similarity="@_similarity.ResponsesSimilarity" Badge="Metadata" />

    <!-- Default Weight 2-->
    @if (_similarity.LocationSimilarity > 0)
    {
        <div class="row">
            <div class="col-sm" />
            <div class="col-sm">
                <br />
                <h2>Location </h2>
                <span class="badge badge-warning">Metadata</span>
                <h3>scores @(_similarity.LocationSimilarity * 100)</h3>
                <img src="@($"/flags/{_document1.GeographyIso.ToUpperInvariant()}.svg")" alt="@_document1.GeographyIso" />
                &nbsp;
                @_document1.Geography

            </div>
            <div class="col-sm" />
        </div>
    }

    <!-- Default Weight 1-->

    @if (_similarity.TypeSimilarity > 0)
    {
        <div class="row">
            <div class="col-sm" />
            <div class="col-sm">
                <br />
                <h2>Type </h2>
                <span class="badge badge-warning">Metadata</span>
                <h3>scores @(_similarity.TypeSimilarity * 100)</h3>
            </div>
            <div class="col-sm" />
        </div>
    }

    <ListSimilarityResultComponent Title="Location Entities" Similarity="@_similarity.LocationEntitiesSimilarity" Badge="AI" />
    <ListSimilarityResultComponent Title="Document Types" Similarity="@_similarity.DocumentTypesSimilarity" Badge="Metadata" />
    <ListSimilarityResultComponent Title="Semantic Topics" Similarity="@_similarity.TopicSimilarity" Badge="AI" />

</div>
}

@code {

    [Parameter]
    public string Id1 { get; set; }

    [Parameter]
    public string Id2 { get; set; }

    private Legislation _document1;
    private Legislation _document2;
    private SimilarityResult _similarity;

    protected override async Task OnInitializedAsync()
    {
        _document1 = LegislationService.GetLegislation(Id1);
        _document2 = LegislationService.GetLegislation(Id2);
        _similarity = SimilarityService.CalculateSimilarity(_document1, _document2, SimilarityWeights.DefaultWeights());
    }
}
